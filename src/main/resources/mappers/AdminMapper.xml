<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.readmain.service.dao.IAdminDao">

    <sql id="UserBaseColumns">
        id, email, username, `password`, `name`, mobile, `status`, created, updated, last_login_time, google_key
    </sql>

    <sql id="NoPasswordUserColumns">
        id, email, username, `name`, mobile, `status`, created, updated, last_login_time, google_key
    </sql>

    <sql id="ResourceBaseColumns">
        id, pid, resource, resource_name, sort, resource_type, `status`, is_public, created
    </sql>

    <select id="queryAllUsers" resultType="com.readmain.common.entity.SysUserEntity">
        SELECT
        <include refid="NoPasswordUserColumns"/>
        FROM admin_user
        ORDER BY created
    </select>

    <select id="queryUserListByParam" resultType="com.readmain.common.entity.SysUserEntity"
            parameterType="com.readmain.common.entity.SysUserEntity">
        SELECT
        <include refid="NoPasswordUserColumns"/>
        FROM admin_user
        <where>
            <trim suffix="" suffixOverrides="OR">
                <if test="username != null and username != ''">username LIKE CONCAT('%', #{username}, '%') OR</if>
                <if test="email != null and email != ''">email LIKE CONCAT('%', #{email}, '%') OR</if>
                <if test="mobile != null and mobile != ''">mobile LIKE CONCAT('%', #{mobile}, '%') OR</if>
            </trim>
            <if test="username != null and username != '' and email != null and email != '' and mobile != null and mobile != ''">
                <if test="status != null and status != ''">AND `status`=#{status}</if>
            </if>
            <if test="username != null or username != '' and email != null and email != '' or mobile != null and mobile != ''">
                <if test="status != null and status != ''">`status`=#{status}</if>
            </if>
        </where>
        ORDER BY created
    </select>

    <select id="getUserByLoginName" resultType="com.readmain.common.entity.SysUserEntity">
        SELECT
        <include refid="UserBaseColumns"/>
        FROM admin_user WHERE email=#{loginName} OR username=#{loginName} OR mobile=#{loginName} LIMIT 1
    </select>

    <select id="getUserById" resultType="com.readmain.common.entity.SysUserEntity">
        SELECT
        <include refid="UserBaseColumns"/>
        FROM admin_user WHERE id=#{userId} LIMIT 1
    </select>

    <insert id="saveUser" parameterType="com.readmain.common.entity.SysUserEntity" keyProperty="id" keyColumn="id"
            useGeneratedKeys="true">
        INSERT INTO admin_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null and username != ''">username,</if>
            <if test="password != null and password != ''">`password`,</if>
            <if test="name != null and name != ''">`name`,</if>
            <if test="mobile != null and mobile != ''">mobile,</if>
            <if test="email != null and email != ''">email,</if>
            <if test="status != null and status != ''">`status`,</if>
            <if test="created != null and created != ''">created,</if>
            <if test="updated != null and updated != ''">updated,</if>
        </trim>
        <trim prefix=" VALUES(" suffix=")" suffixOverrides=",">
            <if test="username != null and username != ''">#{username},</if>
            <if test="password != null and password != ''">#{password},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="mobile != null and mobile != ''">#{mobile},</if>
            <if test="email != null and email != ''">#{email},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="created != null and created != ''">#{created},</if>
            <if test="updated != null and updated != ''">#{updated},</if>
        </trim>
    </insert>

    <update id="updateUser" parameterType="com.readmain.common.entity.SysUserEntity">
        UPDATE admin_user
        <set>
            <if test="password != null and password != ''">`password`=#{password},</if>
            <if test="name != null and name != ''">`name`=#{name},</if>
            <if test="mobile != null and mobile != ''">mobile=#{mobile},</if>
            <if test="email != null and email != ''">email=#{email},</if>
            <if test="status != null and status != ''">`status`=#{status},</if>
            <if test="updated != null and updated != ''">updated=#{updated},</if>
            <if test="lastLoginTime != null and lastLoginTime != ''">last_login_time=#{lastLoginTime},</if>
            <if test="googleKey != null and googleKey != ''">google_key=#{googleKey},</if>
        </set>
        WHERE id=#{id}
    </update>

    <update id="updateUserStatus">
        UPDATE admin_user SET `status`=#{status}
        WHERE id IN
        <foreach collection="userIds" item="userId" open="(" close=")" separator=",">#{userId}</foreach>
    </update>

    <select id="queryAllRoles" resultType="com.readmain.common.entity.SysRoleEntity">
        SELECT
            id,
            `name`
        FROM admin_role
        ORDER BY id
    </select>

    <select id="getRoleById" resultType="com.readmain.common.entity.SysRoleEntity">
        SELECT
            id,
            `name`
        FROM admin_role
        WHERE id = #{id}
    </select>

    <insert id="saveRole" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
        INSERT INTO admin_role (`name`) VALUES (#{name})
    </insert>

    <update id="updateRole">
        UPDATE admin_role
        SET `name` = #{name}
        WHERE id = #{id}
    </update>

    <delete id="deleteRole">
        DELETE FROM admin_role
        WHERE id = #{id}
    </delete>

    <select id="queryAllResources" resultType="com.readmain.common.entity.SysResourceEntity">
        SELECT
        <include refid="ResourceBaseColumns"/>
        FROM admin_resource
        ORDER BY created
    </select>

    <select id="getResourceById" resultType="com.readmain.common.entity.SysResourceEntity">
        SELECT
        <include refid="ResourceBaseColumns"/>
        FROM admin_resource WHERE id=#{id}
    </select>

    <insert id="saveResource" parameterType="com.readmain.common.entity.SysResourceEntity" keyProperty="id"
            keyColumn="id" useGeneratedKeys="true">
        INSERT INTO admin_resource
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pid != null and pid != ''">pid,</if>
            <if test="resourceName != null and resourceName != ''">resource_name,</if>
            <if test="resource != null and resource != ''">resource,</if>
            <if test="sort != null and sort != ''">sort,</if>
            <if test="resourceType != null and resourceType != ''">resource_type,</if>
            <if test="status != null and status != ''">`status`,</if>
            <if test="isPublic != null and isPublic != ''">is_public,</if>
            <if test="created != null and created != ''">created,</if>
        </trim>
        <trim prefix=" VALUES(" suffix=")" suffixOverrides=",">
            <if test="pid != null and pid != ''">#{pid},</if>
            <if test="resourceName != null and resourceName != ''">#{resourceName},</if>
            <if test="resource != null and resource != ''">#{resource},</if>
            <if test="sort != null and sort != ''">#{sort},</if>
            <if test="resourceType != null and resourceType != ''">#{resourceType},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="isPublic != null and isPublic != ''">#{isPublic},</if>
            <if test="created != null and created != ''">#{created},</if>
        </trim>
    </insert>

    <update id="updateResource" parameterType="com.readmain.common.entity.SysResourceEntity">
        UPDATE admin_resource
        <set>
            <if test="resourceName != null and resourceName != ''">resource_name=#{resourceName},</if>
            <if test="resource != null and resource != ''">resource=#{resource},</if>
            <if test="sort != null and sort != ''">sort=#{sort},</if>
            <if test="resourceType != null and resourceType != ''">resource_type=#{resourceType},</if>
            <if test="status != null and status != ''">`status`=#{status},</if>
            <if test="isPublic != null and isPublic != ''">is_public=#{isPublic},</if>
            <if test="created != null and created != ''">created=#{created},</if>
        </set>
        WHERE id=#{id}
    </update>

    <delete id="deleteResource">
        DELETE FROM admin_resource
        WHERE id IN
        <foreach collection="resourceIds" item="resourceId" open="(" close=")" separator=",">#{resourceId}</foreach>
    </delete>

    <select id="getUserRolesByUserId" resultType="com.readmain.common.entity.SysUserRoleEntity">
        SELECT
            user_id,
            role_ids
        FROM admin_user_role
        WHERE user_id = #{userId}
    </select>

    <insert id="saveUserRole" parameterType="com.readmain.common.entity.SysUserRoleEntity">
        REPLACE INTO admin_user_role (user_id, role_ids) VALUES (#{userId}, #{roleIds})
    </insert>

    <delete id="deleteUserRole">
        DELETE FROM admin_user_role
        WHERE user_id = #{userId}
    </delete>

    <select id="getRoleResourcesByRoleId" resultType="com.readmain.common.entity.SysRoleResourceEntity">
        SELECT
            role_id,
            resource_ids
        FROM admin_role_resource
        WHERE role_id = #{roleId}
    </select>

    <insert id="saveRoleResource" parameterType="com.readmain.common.entity.SysRoleResourceEntity">
        REPLACE INTO admin_role_resource (role_id, resource_ids) VALUES (#{roleId}, #{resourceIds})
    </insert>

    <delete id="deleteRoleResource">
        DELETE FROM admin_user_role
        WHERE user_id = #{userId}
    </delete>

    <select id="queryResourcesByResourceIDSs" resultType="com.readmain.common.entity.SysResourceEntity">
        SELECT
        <include refid="ResourceBaseColumns"/>
        FROM admin_resource
        WHERE is_public=1
        <foreach collection="resourcesIDSs" item="resourceIds" separator=" ">
            OR id IN (${resourceIds})
        </foreach>
    </select>

</mapper>